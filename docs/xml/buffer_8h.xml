<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="buffer_8h" kind="file" language="C++">
    <compoundname>buffer.h</compoundname>
    <includes local="no">Eigen/Core</includes>
    <includedby refid="abstract__filter_8cc" local="yes">/code/src/rtff/abstract_filter.cc</includedby>
    <includedby refid="filter__impl_8h" local="yes">/code/src/rtff/filter_impl.h</includedby>
    <includedby refid="overlap__ring__buffer_8cc" local="yes">/code/src/rtff/buffer/overlap_ring_buffer.cc</includedby>
    <includedby refid="ring__buffer_8cc" local="yes">/code/src/rtff/buffer/ring_buffer.cc</includedby>
    <incdepgraph>
      <node id="36">
        <label>Eigen/Core</label>
      </node>
      <node id="35">
        <label>/code/src/rtff/buffer/buffer.h</label>
        <link refid="buffer_8h"/>
        <childnode refid="36" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="38">
        <label>/code/src/rtff/filter_impl.h</label>
        <link refid="filter__impl_8h_source"/>
      </node>
      <node id="37">
        <label>/code/src/rtff/buffer/buffer.h</label>
        <link refid="buffer_8h"/>
        <childnode refid="38" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classrtff_1_1Buffer" prot="public">rtff::Buffer</innerclass>
    <innernamespace refid="namespacertff">rtff</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>RTFF_BUFFER_BUFFER_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RTFF_BUFFER_BUFFER_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;Eigen/Core&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacertff" kindref="compound">rtff</ref><sp/>{</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="12" refid="classrtff_1_1Buffer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classrtff_1_1Buffer" kindref="compound">Buffer</ref><sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Vector<sp/>=<sp/>Eigen::Matrix&lt;T,<sp/>Eigen::Dynamic,<sp/>1&gt;;</highlight></codeline>
<codeline lineno="20" refid="classrtff_1_1Buffer_1a134881532cd7b78eed974736042bdd1d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrtff_1_1Buffer_1a134881532cd7b78eed974736042bdd1d" kindref="member">Init</ref>(uint32_t<sp/>frame_count,<sp/>uint8_t<sp/><ref refid="classrtff_1_1Buffer_1a32a99b8c67f7b618a8bb7aeb771dcc70" kindref="member">channel_count</ref>)<sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>data_.clear();</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(uint8_t<sp/>channel_idx<sp/>=<sp/>0;<sp/>channel_idx<sp/>&lt;<sp/><ref refid="classrtff_1_1Buffer_1a32a99b8c67f7b618a8bb7aeb771dcc70" kindref="member">channel_count</ref>;<sp/>channel_idx++)<sp/>{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data_.push_back(Vector::Zero(frame_count));</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="classrtff_1_1Buffer_1a911ac1515779c812f2c2486af72bd10b" refkind="member"><highlight class="normal"><sp/><sp/>Vector&amp;<sp/><ref refid="classrtff_1_1Buffer_1a911ac1515779c812f2c2486af72bd10b" kindref="member">channel</ref>(uint8_t<sp/>channel_idx)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_[channel_idx];<sp/>}</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Vector&amp;<sp/><ref refid="classrtff_1_1Buffer_1a911ac1515779c812f2c2486af72bd10b" kindref="member">channel</ref>(uint8_t<sp/>channel_idx)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_[channel_idx];</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="classrtff_1_1Buffer_1a32a99b8c67f7b618a8bb7aeb771dcc70" refkind="member"><highlight class="normal"><sp/><sp/>uint8_t<sp/><ref refid="classrtff_1_1Buffer_1a32a99b8c67f7b618a8bb7aeb771dcc70" kindref="member">channel_count</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_.size();<sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="classrtff_1_1Buffer_1a4a9b9465dc09b7901a31958105ac998a" refkind="member"><highlight class="normal"><sp/><sp/>std::vector&lt;T*&gt;<sp/><ref refid="classrtff_1_1Buffer_1a4a9b9465dc09b7901a31958105ac998a" kindref="member">data_ptr</ref>()<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;T*&gt;<sp/>result;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>vector<sp/>:<sp/>data_)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>result.push_back(vector.data());</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="classrtff_1_1Buffer_1a83f5ac85d48fa1943815d39e412b7b4b" refkind="member"><highlight class="normal"><sp/><sp/>uint32_t<sp/><ref refid="classrtff_1_1Buffer_1a83f5ac85d48fa1943815d39e412b7b4b" kindref="member">size</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_[0].size();<sp/>}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/>std::vector&lt;Vector&gt;<sp/>data_;</highlight></codeline>
<codeline lineno="59"><highlight class="normal">};</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classrtff_1_1Buffer" kindref="compound">TimeAmplitudeBuffer</ref><sp/>=<sp/><ref refid="classrtff_1_1Buffer" kindref="compound">Buffer&lt;float&gt;</ref>;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="classrtff_1_1Buffer" kindref="compound">TimeFrequencyBuffer</ref><sp/>=<sp/><ref refid="classrtff_1_1Buffer" kindref="compound">Buffer&lt;std::complex&lt;float&gt;</ref>&gt;;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>rtff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>RTFF_BUFFER_BUFFER_H_</highlight></codeline>
    </programlisting>
    <location file="/code/src/rtff/buffer/buffer.h"/>
  </compounddef>
</doxygen>
