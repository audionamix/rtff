<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classrtff_1_1MultichannelRingBuffer" kind="class" language="C++" prot="public">
    <compoundname>rtff::MultichannelRingBuffer</compoundname>
    <includes refid="ring__buffer_8h" local="no">ring_buffer.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classrtff_1_1MultichannelRingBuffer_1ac4d299a8a84c11f349cf819c991d7e51" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classrtff_1_1RingBuffer" kindref="compound">RingBuffer</ref> &gt;</type>
        <definition>std::vector&lt;RingBuffer&gt; rtff::MultichannelRingBuffer::buffers_</definition>
        <argsstring></argsstring>
        <name>buffers_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/code/src/rtff/buffer/ring_buffer.h" line="110" column="1" bodyfile="/code/src/rtff/buffer/ring_buffer.h" bodystart="110" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classrtff_1_1MultichannelRingBuffer_1a5980d41223bb1cc64b1a1b3ba28de84a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>rtff::MultichannelRingBuffer::MultichannelRingBuffer</definition>
        <argsstring>(uint32_t container_size, uint8_t channel_count)</argsstring>
        <name>MultichannelRingBuffer</name>
        <param>
          <type>uint32_t</type>
          <declname>container_size</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>channel_count</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>container_size</parametername>
</parameternamelist>
<parameterdescription>
<para>the maximum number of data a user can write without reading </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>channel_count</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of channel of the original signal </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/code/src/rtff/buffer/ring_buffer.h" line="63" column="1" bodyfile="/code/src/rtff/buffer/ring_buffer.cc" bodystart="83" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classrtff_1_1MultichannelRingBuffer_1ada3b38a78cf37bfb1d2cbbef075bb7ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtff::MultichannelRingBuffer::InitWithZeros</definition>
        <argsstring>(uint32_t frame_number)</argsstring>
        <name>InitWithZeros</name>
        <param>
          <type>uint32_t</type>
          <declname>frame_number</declname>
        </param>
        <briefdescription>
<para>fill the buffer with count zeros </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>frame_number</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of zeros to add into the buffer </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/code/src/rtff/buffer/ring_buffer.h" line="69" column="1" bodyfile="/code/src/rtff/buffer/ring_buffer.cc" bodystart="90" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classrtff_1_1MultichannelRingBuffer_1a3b13ecd4c163614bddab368979567fa1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classrtff_1_1RingBuffer" kindref="compound">RingBuffer</ref> &amp;</type>
        <definition>RingBuffer &amp; rtff::MultichannelRingBuffer::operator[]</definition>
        <argsstring>(uint8_t channel_idx)</argsstring>
        <name>operator[]</name>
        <param>
          <type>uint8_t</type>
          <declname>channel_idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the <ref refid="classrtff_1_1RingBuffer" kindref="compound">RingBuffer</ref> at a given channel </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the channel to access </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/code/src/rtff/buffer/ring_buffer.h" line="75" column="1" bodyfile="/code/src/rtff/buffer/ring_buffer.cc" bodystart="96" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classrtff_1_1MultichannelRingBuffer_1a1f09a8154e42d4366fc99e4f8efab6f2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classrtff_1_1RingBuffer" kindref="compound">RingBuffer</ref> &amp;</type>
        <definition>const RingBuffer &amp; rtff::MultichannelRingBuffer::operator[]</definition>
        <argsstring>(uint8_t channel_idx) const</argsstring>
        <name>operator[]</name>
        <param>
          <type>uint8_t</type>
          <declname>channel_idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>the <ref refid="classrtff_1_1RingBuffer" kindref="compound">RingBuffer</ref> at a given channel </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>channel_idx</parametername>
</parameternamelist>
<parameterdescription>
<para>the index of the channel to access </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/code/src/rtff/buffer/ring_buffer.h" line="80" column="1" bodyfile="/code/src/rtff/buffer/ring_buffer.cc" bodystart="99" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classrtff_1_1MultichannelRingBuffer_1aa633e2e6a50ca01ec63c2e1368d4308b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtff::MultichannelRingBuffer::Write</definition>
        <argsstring>(const AudioBuffer &amp;buffer, uint32_t frame_count)</argsstring>
        <name>Write</name>
        <param>
          <type>const <ref refid="classrtff_1_1AudioBuffer" kindref="compound">AudioBuffer</ref> &amp;</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>frame_count</declname>
        </param>
        <briefdescription>
<para>write data to the buffer </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classrtff_1_1AudioBuffer" kindref="compound">AudioBuffer</ref> to write </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>frame_count</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of samples available in the buffer </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/code/src/rtff/buffer/ring_buffer.h" line="87" column="1" bodyfile="/code/src/rtff/buffer/ring_buffer.cc" bodystart="104" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="classrtff_1_1MultichannelRingBuffer_1abf7db54cbcee3be296873b67f95a3159" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool rtff::MultichannelRingBuffer::Read</definition>
        <argsstring>(AudioBuffer *buffer, uint32_t frame_count)</argsstring>
        <name>Read</name>
        <param>
          <type><ref refid="classrtff_1_1AudioBuffer" kindref="compound">AudioBuffer</ref> *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>frame_count</declname>
        </param>
        <briefdescription>
<para>read data from the buffer and remove frame_count data </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>a pre-allocated <ref refid="classrtff_1_1AudioBuffer" kindref="compound">AudioBuffer</ref> of size frame_count </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>frame_count</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of frames to read </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true is read was successful </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/code/src/rtff/buffer/ring_buffer.h" line="94" column="1" bodyfile="/code/src/rtff/buffer/ring_buffer.cc" bodystart="111" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="classrtff_1_1MultichannelRingBuffer_1a82c02eb619fbe20b44562e16554b0c7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void rtff::MultichannelRingBuffer::Write</definition>
        <argsstring>(const Buffer&lt; float &gt; &amp;buffer, uint32_t frame_count)</argsstring>
        <name>Write</name>
        <param>
          <type>const <ref refid="classrtff_1_1Buffer" kindref="compound">Buffer</ref>&lt; float &gt; &amp;</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>frame_count</declname>
        </param>
        <briefdescription>
<para>write data to the buffer </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="classrtff_1_1Buffer" kindref="compound">Buffer&lt;float&gt;</ref> to write </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>frame_count</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of samples available in the buffer </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/code/src/rtff/buffer/ring_buffer.h" line="100" column="1" bodyfile="/code/src/rtff/buffer/ring_buffer.cc" bodystart="121" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classrtff_1_1MultichannelRingBuffer_1ac8373e0157414c5b2b08255fbce3ca58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool rtff::MultichannelRingBuffer::Read</definition>
        <argsstring>(Buffer&lt; float &gt; *buffer, uint32_t frame_count)</argsstring>
        <name>Read</name>
        <param>
          <type><ref refid="classrtff_1_1Buffer" kindref="compound">Buffer</ref>&lt; float &gt; *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>frame_count</declname>
        </param>
        <briefdescription>
<para>read data from the buffer and remove frame_count data </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>a pre-allocated <ref refid="classrtff_1_1Buffer" kindref="compound">Buffer&lt;float&gt;</ref> of size frame_count </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>frame_count</parametername>
</parameternamelist>
<parameterdescription>
<para>the number of frames to read </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true is read was successful </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/code/src/rtff/buffer/ring_buffer.h" line="107" column="1" bodyfile="/code/src/rtff/buffer/ring_buffer.cc" bodystart="129" bodyend="138"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A multichannel wrapper around the <ref refid="classrtff_1_1RingBuffer" kindref="compound">RingBuffer</ref>. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/code/src/rtff/buffer/ring_buffer.h" line="55" column="1" bodyfile="/code/src/rtff/buffer/ring_buffer.h" bodystart="55" bodyend="111"/>
    <listofallmembers>
      <member refid="classrtff_1_1MultichannelRingBuffer_1ac4d299a8a84c11f349cf819c991d7e51" prot="private" virt="non-virtual"><scope>rtff::MultichannelRingBuffer</scope><name>buffers_</name></member>
      <member refid="classrtff_1_1MultichannelRingBuffer_1ada3b38a78cf37bfb1d2cbbef075bb7ca" prot="public" virt="non-virtual"><scope>rtff::MultichannelRingBuffer</scope><name>InitWithZeros</name></member>
      <member refid="classrtff_1_1MultichannelRingBuffer_1a5980d41223bb1cc64b1a1b3ba28de84a" prot="public" virt="non-virtual"><scope>rtff::MultichannelRingBuffer</scope><name>MultichannelRingBuffer</name></member>
      <member refid="classrtff_1_1MultichannelRingBuffer_1a3b13ecd4c163614bddab368979567fa1" prot="public" virt="non-virtual"><scope>rtff::MultichannelRingBuffer</scope><name>operator[]</name></member>
      <member refid="classrtff_1_1MultichannelRingBuffer_1a1f09a8154e42d4366fc99e4f8efab6f2" prot="public" virt="non-virtual"><scope>rtff::MultichannelRingBuffer</scope><name>operator[]</name></member>
      <member refid="classrtff_1_1MultichannelRingBuffer_1abf7db54cbcee3be296873b67f95a3159" prot="public" virt="non-virtual"><scope>rtff::MultichannelRingBuffer</scope><name>Read</name></member>
      <member refid="classrtff_1_1MultichannelRingBuffer_1ac8373e0157414c5b2b08255fbce3ca58" prot="public" virt="non-virtual"><scope>rtff::MultichannelRingBuffer</scope><name>Read</name></member>
      <member refid="classrtff_1_1MultichannelRingBuffer_1aa633e2e6a50ca01ec63c2e1368d4308b" prot="public" virt="non-virtual"><scope>rtff::MultichannelRingBuffer</scope><name>Write</name></member>
      <member refid="classrtff_1_1MultichannelRingBuffer_1a82c02eb619fbe20b44562e16554b0c7b" prot="public" virt="non-virtual"><scope>rtff::MultichannelRingBuffer</scope><name>Write</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
