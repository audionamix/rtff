<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="overlap__ring__buffer_8h" kind="file" language="C++">
    <compoundname>overlap_ring_buffer.h</compoundname>
    <includes local="no">cstdint</includes>
    <includes local="no">vector</includes>
    <includedby refid="abstract__filter_8cc" local="yes">/code/src/rtff/abstract_filter.cc</includedby>
    <includedby refid="buffer__test_8cc" local="yes">/code/src/rtff/buffer/buffer_test.cc</includedby>
    <includedby refid="overlap__ring__buffer_8cc" local="yes">/code/src/rtff/buffer/overlap_ring_buffer.cc</includedby>
    <incdepgraph>
      <node id="58">
        <label>cstdint</label>
      </node>
      <node id="57">
        <label>/code/src/rtff/buffer/overlap_ring_buffer.h</label>
        <link refid="overlap__ring__buffer_8h"/>
        <childnode refid="58" relation="include">
        </childnode>
        <childnode refid="59" relation="include">
        </childnode>
      </node>
      <node id="59">
        <label>vector</label>
      </node>
    </incdepgraph>
    <innerclass refid="classrtff_1_1Buffer" prot="public">rtff::Buffer</innerclass>
    <innerclass refid="classrtff_1_1OverlapRingBuffer" prot="public">rtff::OverlapRingBuffer</innerclass>
    <innerclass refid="classrtff_1_1MultichannelOverlapRingBuffer" prot="public">rtff::MultichannelOverlapRingBuffer</innerclass>
    <innernamespace refid="namespacertff">rtff</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>RTFF_BUFFER_OVERLAP_RING_BUFER_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RTFF_BUFFER_OVERLAP_RING_BUFER_H_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdint&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacertff" kindref="compound">rtff</ref><sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Buffer;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">AudioBuffer;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="classrtff_1_1OverlapRingBuffer" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classrtff_1_1OverlapRingBuffer" kindref="compound">OverlapRingBuffer</ref><sp/>{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><ref refid="classrtff_1_1OverlapRingBuffer_1a4ce89076d1cf5ae4d1f8ea772a8ca223" kindref="member">OverlapRingBuffer</ref>(uint32_t<sp/>read_size,<sp/>uint32_t<sp/>step_size);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrtff_1_1OverlapRingBuffer_1ad278685305f857c88852fbbaaa8ecb7b" kindref="member">InitWithZeros</ref>(uint32_t<sp/>count);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrtff_1_1OverlapRingBuffer_1a5f5402125648e5ebe8595d307bb4fe0e" kindref="member">Write</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>data,<sp/>uint32_t<sp/>frame_count);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classrtff_1_1OverlapRingBuffer_1a9bb4f69f3c71e7bdfb1998314756bc2e" kindref="member">Read</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>data);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>uint32_t<sp/>read_size_;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>uint32_t<sp/>step_size_;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>uint32_t<sp/>write_index_;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>uint32_t<sp/>read_index_;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>uint32_t<sp/>available_data_size_;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>std::vector&lt;float&gt;<sp/>buffer_;</highlight></codeline>
<codeline lineno="55"><highlight class="normal">};</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="classrtff_1_1MultichannelOverlapRingBuffer" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classrtff_1_1MultichannelOverlapRingBuffer" kindref="compound">MultichannelOverlapRingBuffer</ref><sp/>{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><ref refid="classrtff_1_1MultichannelOverlapRingBuffer" kindref="compound">MultichannelOverlapRingBuffer</ref>(uint32_t<sp/>read_size,<sp/>uint32_t<sp/>step_size,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>channel_count);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrtff_1_1OverlapRingBuffer_1ad278685305f857c88852fbbaaa8ecb7b" kindref="member">InitWithZeros</ref>(uint32_t<sp/>frame_number);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><ref refid="classrtff_1_1OverlapRingBuffer" kindref="compound">OverlapRingBuffer</ref>&amp;<sp/>operator[](uint8_t<sp/>channel_idx);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classrtff_1_1OverlapRingBuffer" kindref="compound">OverlapRingBuffer</ref>&amp;<sp/>operator[](uint8_t<sp/>channel_idx)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrtff_1_1OverlapRingBuffer_1a5f5402125648e5ebe8595d307bb4fe0e" kindref="member">Write</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classrtff_1_1AudioBuffer" kindref="compound">AudioBuffer</ref>&amp;<sp/>buffer,<sp/>uint32_t<sp/>frame_count);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classrtff_1_1OverlapRingBuffer_1a9bb4f69f3c71e7bdfb1998314756bc2e" kindref="member">Read</ref>(<ref refid="classrtff_1_1AudioBuffer" kindref="compound">AudioBuffer</ref>*<sp/>buffer);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classrtff_1_1OverlapRingBuffer_1a5f5402125648e5ebe8595d307bb4fe0e" kindref="member">Write</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classrtff_1_1Buffer" kindref="compound">Buffer&lt;float&gt;</ref>&amp;<sp/>buffer,<sp/>uint32_t<sp/>frame_count);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classrtff_1_1OverlapRingBuffer_1a9bb4f69f3c71e7bdfb1998314756bc2e" kindref="member">Read</ref>(<ref refid="classrtff_1_1Buffer" kindref="compound">Buffer&lt;float&gt;</ref>*<sp/>buffer);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/>std::vector&lt;OverlapRingBuffer&gt;<sp/>buffers_;</highlight></codeline>
<codeline lineno="121"><highlight class="normal">};</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>rtff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/>//<sp/>RTFF_BUFFER_OVERLAP_RING_BUFER_H_</highlight></codeline>
    </programlisting>
    <location file="/code/src/rtff/buffer/overlap_ring_buffer.h"/>
  </compounddef>
</doxygen>
